/*! snek v1.5.0 | (c) 2024 iconix | MIT License | https://github.com/iconix/snek */
const t={BOARD:{CTRL_PANEL_HEIGHT:50,MARGIN_SIZE:20,NUM_STEPS_ACROSS_CANVAS:30,DEFAULT_BACKGROUND_COLOR:"white",DEFAULT_BORDER_COLOR:"darkgreen",TELEPORT_BORDER_COLOR:"blue",TELEPORT_BACKGROUND_COLOR:"#e2f1fa",FILTERS:{NONE:"none",PAUSE:"contrast(1.4) sepia(1)",ENDGAME:"grayscale(0.8) blur(0.5px)"}},SNAKE:{INITIAL_LENGTH:5,DEFAULT_COLOR:"lightgreen",DEFAULT_BORDER_COLOR:"darkgreen",PHASE_BORDER_COLOR:"violet"},ITEM:{FOOD_COLOR:"red",FOOD_BORDER_COLOR:"darkred",PHASE_COLOR:"orchid",PHASE_BORDER_COLOR:"violet",TELEPORT_COLOR:"blue",TELEPORT_BORDER_COLOR:"darkblue",PHASE_SCORE_THRESHOLD:150,TELEPORT_SCORE_THRESHOLD:50,BASE_PHASE_PROBABILITY:.1,BASE_TELEPORT_PROBABILITY:.1,BASE_VOLATILE_FOOD_PROBABILITY:.01},GAME:{SCORE_INCREMENT:10,SCORE_THRESHOLD_FOR_VOLATILE_FOOD:100},INPUT:{GAME_SPEED_MS__ARROW:100,GAME_SPEED_MS__MOTION:125,SWIPE_SENSITIVITY:10,MOTION_SENSITIVITY:15,MOTION_THROTTLE_TIME_MS:100,MOTION_DEADZONE:2,DOMINANT_DIRECTION_THRESHOLD:5},CANVAS:{GAME_TEXT_COLOR:"gray",HIGH_SCORE_TEXT_COLOR:"goldenrod",PAUSE_BTN_COLOR:"darkkhaki",EXCLAMATION_BTN_COLOR:"darkkhaki",GAME_TEXT_FONT_FAMILY:'"Saira", serif',GAME_TEXT_FONT_SIZE:50},STATE:{LOCAL_STORAGE_KEY_HIGH_SCORE:"highScore",LOCAL_STORAGE_KEY_GAME_SPEED:"gameSpeed"},ERROR:{MESSAGE_FONT:"20px Arial",MESSAGE_COLOR:"red",MESSAGE_BACKGROUND:"rgba(0, 0, 0, 0.7)"}},{BOARD:e}=t,i="motionRequest";class n{constructor(t,i){if(this._canvas=t,this._ctrlPanel=i,!(this.ctx=this._canvas.getContext("2d")))throw new Error("2d context not supported or canvas already initialized");this._boardSize=this._calculateBoardSize(),this._ratio=window.devicePixelRatio||1,this._sizeCanvas(),this._sizeControlPanel(),this._width=t.width,this._height=t.height,this._blockSize=t.width/e.NUM_STEPS_ACROSS_CANVAS,this._activeFilter=e.FILTERS.NONE,this._color=e.DEFAULT_BACKGROUND_COLOR,this._borderColor=e.DEFAULT_BORDER_COLOR,this._isGlowing=!1,this.resetFilter()}get canvas(){return this._canvas}get color(){return this._color}get borderColor(){return this._borderColor}get isGlowing(){return this._isGlowing}get activeFilter(){return this._activeFilter}get width(){return this._width}get height(){return this._height}get blockSize(){return this._blockSize}get ratio(){return this._ratio}resetFilter(){this._activeFilter=e.FILTERS.NONE}setEndGameFilter(){this._activeFilter=e.FILTERS.ENDGAME}setPauseGameFilter(){this._activeFilter=e.FILTERS.PAUSE}enterFullScreen(){this._canvas.requestFullscreen().then((function(){try{screen.lockOrientationUniversal=screen.lockOrientation||screen.mozLockOrientation||screen.msLockOrientation,screen.lockOrientationUniversal("portrait-primary")}catch(t){}}))}exitFullScreen(){document.exitFullscreen()}createMotionRequestButton(){if(!this._ctrlPanel)return null;let t=this.getMotionRequestButton();if(t)return t;let e=document.createElement("button");return e.innerHTML="Allow Motion Control",e.setAttribute("id",i),e.type="button",this._ctrlPanel.appendChild(e),e}getMotionRequestButton(){const t=document.getElementById(i);return t instanceof HTMLButtonElement?t:null}removeMotionRequestButton(){let t=this.getMotionRequestButton();t?.parentNode?.removeChild(t)}setGlow(t){t!==this.isGlowing&&(this._isGlowing=t,t?(this._color=e.TELEPORT_BACKGROUND_COLOR,this._borderColor=e.TELEPORT_BORDER_COLOR):(this._color=e.DEFAULT_BACKGROUND_COLOR,this._borderColor=e.DEFAULT_BORDER_COLOR))}needsPermission(){return null!==document.getElementById(i)}_calculateBoardSize(){const t=(Math.min(window.innerWidth,window.innerHeight)-e.CTRL_PANEL_HEIGHT)/e.NUM_STEPS_ACROSS_CANVAS;return Math.floor(t)*e.NUM_STEPS_ACROSS_CANVAS-e.MARGIN_SIZE}_sizeCanvas(){this._canvas.style.width=this._boardSize+"px",this._canvas.style.height=this._boardSize+"px",this._canvas.width=this._boardSize*this._ratio,this._canvas.height=this._canvas.width}_sizeControlPanel(){this._ctrlPanel&&(this._ctrlPanel.style.width=this._boardSize+"px",this._ctrlPanel.style.height=e.CTRL_PANEL_HEIGHT+"px")}}const{ERROR:o}=t;function s(t,e=null){e&&e instanceof HTMLCanvasElement?function(t,e){const i=e.getContext("2d");if(!i)return console.error("unable to get 2D context from canvas"),void a(t);i.save(),i.font=o.MESSAGE_FONT,i.fillStyle=o.MESSAGE_BACKGROUND;const n=i.measureText(t).width+20,s=30,r=(e.width-n)/2,h=e.height/2-s/2;i.fillRect(r,h,n,s),i.fillStyle=o.MESSAGE_COLOR,i.textAlign="center",i.textBaseline="middle",i.fillText(t,e.width/2,e.height/2),i.restore()}(t,e):a(t)}function a(t){const e=document.createElement("div");e.style.position="fixed",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.backgroundColor=o.MESSAGE_BACKGROUND,e.style.color=o.MESSAGE_COLOR,e.style.padding="15px",e.style.borderRadius="5px",e.style.zIndex="1000",e.style.whiteSpace="pre-wrap",e.style.maxWidth="80%",e.style.overflowWrap="break-word",e.textContent=t,document.body.appendChild(e)}const{ITEM:r}=t,h="Phase",l="Teleport";class d{constructor(t,e){this._x=Number.MIN_SAFE_INTEGER,this._y=Number.MIN_SAFE_INTEGER,this._generate(t,e)}get x(){return this._x}get y(){return this._y}get type(){return"UNKNOWN_ITEM"}get fillColor(){return""}get borderColor(){return""}_generate(t,e){this._x=this._randomBlock(0,t.width-t.blockSize,t.blockSize),this._y=this._randomBlock(0,t.height-t.blockSize,t.blockSize),e.forEachSegment((i=>{i.x==this.x&&i.y==this.y&&this._generate(t,e)}))}_randomBlock(t,e,i){return Math.round((Math.random()*(e-t)+t)/i)*i}}class c extends d{get type(){return"FOOD"}get fillColor(){return r.FOOD_COLOR}get borderColor(){return r.FOOD_BORDER_COLOR}}class _ extends d{get type(){return"TELEPORT"}get fillColor(){return r.TELEPORT_COLOR}get borderColor(){return r.TELEPORT_BORDER_COLOR}}class u extends d{get type(){return"PHASE"}get fillColor(){return r.PHASE_COLOR}get borderColor(){return r.PHASE_BORDER_COLOR}}const E={none:null,food:c,teleport:_,phase:u};function m(t,e,i={}){const{alwaysReturnItem:n=!1,reducePowerUpProbability:o=!1}=i,s=function(t,e,i,n){const o=function(t,e,i,n){if(t===r.TELEPORT_SCORE_THRESHOLD&&i)return 1;if(t>r.TELEPORT_SCORE_THRESHOLD&&!e[l])return n?r.BASE_TELEPORT_PROBABILITY/10:r.BASE_TELEPORT_PROBABILITY;return 0}(t,e,i,n),s=function(t,e,i,n){if(t===r.PHASE_SCORE_THRESHOLD&&i)return 1;if(t>r.PHASE_SCORE_THRESHOLD&&!e[h])return n?r.BASE_PHASE_PROBABILITY/10:r.BASE_PHASE_PROBABILITY;return 0}(t,e,i,n);let a,d;i?(a=1-o-s,d=0):(a=r.BASE_VOLATILE_FOOD_PROBABILITY,d=1-o-s-a);const c={none:d,food:a,teleport:o,phase:s},_=Object.values(c).reduce(((t,e)=>t+e),0);if(Math.abs(_-1)>1e-10)throw new Error(`Item probabilities must sum to 1. Current sum: ${_}`);return c}(t,e,n,o),a=function(t){const e=Math.random();let i=0;for(const[n,o]of Object.entries(t))if(i+=o,e<=i)return n;throw new Error("item selection failed")}(s);return E[a]}const g="left",O="right",S="up",p="down",v={[g]:{dx:-1,dy:0},[O]:{dx:1,dy:0},[S]:{dx:0,dy:-1},[p]:{dx:0,dy:1}};const{INPUT:T}=t;class b{constructor(t,e={}){this.container=t,this.options={showInfo:!0,position:"inline",...e},this.create()}create(){this.container.innerHTML=`\n            <div class="motion-indicator ${this.options.position}">\n                <div class="tilt-indicator ${this.options.position}">\n                    <div class="dot"></div>\n                    <div class="arrow up ${this.options.position}">▲</div>\n                    <div class="arrow down ${this.options.position}">▼</div>\n                    <div class="arrow left ${this.options.position}">◀</div>\n                    <div class="arrow right ${this.options.position}">▶</div>\n                </div>\n                ${this.options.showInfo?'\n                <div class="info">\n                    <p>Direction: <span class="direction-value">None</span></p>\n                    <p>Sensitivity: <span class="sensitivity-value">1.00</span></p>\n                    <p>Beta: <span class="beta-value">0.00</span>°</p>\n                    <p>Gamma: <span class="gamma-value">0.00</span>°</p>\n                </div>\n                ':""}\n            </div>\n        `,this.dot=this.container.querySelector(".dot"),this.arrows=this.container.querySelectorAll(".arrow"),this.directionValue=this.container.querySelector(".direction-value"),this.sensitivityValue=this.container.querySelector(".sensitivity-value"),this.betaValue=this.container.querySelector(".beta-value"),this.gammaValue=this.container.querySelector(".gamma-value"),this.addStyles()}addStyles(){const t=document.createElement("style");t.textContent="\n            .motion-indicator {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n            .motion-indicator.corner {\n                position: fixed;\n                bottom: 20px;\n                right: 20px;\n                background: white;\n                padding: 10px;\n                border-radius: 10px;\n                box-shadow: 0 0 10px rgba(0,0,0,0.1);\n            }\n            .tilt-indicator {\n                width: 150px;\n                height: 150px;\n                border: 2px solid #ccc;\n                border-radius: 10px;\n                position: relative;\n                overflow: hidden;\n            }\n            .tilt-indicator.corner {\n                width: 100px;\n                height: 100px;\n            }\n            .dot {\n                width: 20px;\n                height: 20px;\n                background: blue;\n                border-radius: 50%;\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                transition: transform 0.1s ease;\n            }\n            .arrow {\n                position: absolute;\n                color: #ccc;\n                font-size: 24px;\n                transition: color 0.3s ease;\n            }\n            .arrow.up { top: 10px; left: 50%; transform: translateX(-50%); }\n            .arrow.down { bottom: 10px; left: 50%; transform: translateX(-50%); }\n            .arrow.left { left: 10px; top: 50%; transform: translateY(-50%); }\n            .arrow.right { right: 10px; top: 50%; transform: translateY(-50%); }\n            .arrow.active { color: green; }\n            .arrow.up.corner { top: 5px; }\n            .arrow.down.corner { bottom: 5px; }\n            .arrow.left.corner { left: 5px; }\n            .arrow.right.corner { right: 5px; }\n            .info {\n                text-align: left;\n                margin-left: 20px;\n            }\n            .info p {\n                margin: 5px 0;\n            }\n        ",document.head.appendChild(t)}update(t,e,i){const{beta:n,gamma:o}=t,s=30,a=Math.min(Math.max(o,-30),s)/s,r=Math.min(Math.max(n,-30),s)/s,h="corner"===this.options.position?40:60;this.dot.style.transform=`translate(${a*h}px, ${r*h}px)`,this.arrows.forEach((t=>t.classList.remove("active"))),e&&this.container.querySelector(`.arrow.${e.toLowerCase()}`).classList.add("active"),this.options.showInfo&&(this.directionValue.textContent=e||"None",this.sensitivityValue.textContent=i.toFixed(2),this.betaValue.textContent=n.toFixed(2),this.gammaValue.textContent=o.toFixed(2))}}function R(t,e,i,n){if(!e)return{direction:null,sensitivity:1,orientationChange:{beta:0,gamma:0}};const o=t.beta-e.beta,s=t.gamma-e.gamma,a={beta:t.beta-i.beta,gamma:t.gamma-i.gamma},r=1+Math.sqrt(o**2+s**2)/45,h=T.MOTION_DEADZONE/r;Math.abs(a.beta)<=h&&(a.beta=0),Math.abs(a.gamma)<=h&&(a.gamma=0);return{direction:function(t){let e=null;const i=Math.abs(t.beta),n=Math.abs(t.gamma);i>n&&i-n>T.DOMINANT_DIRECTION_THRESHOLD?e=t.beta<0?S:p:n>i&&n-i>T.DOMINANT_DIRECTION_THRESHOLD&&(e=t.gamma<0?g:O);return e}(a),sensitivity:r,orientationChange:a}}const{SNAKE:C}=t;class y{constructor(t,e,i){this._blockSize=i;const n=Math.floor(t/(2*i))*i,o=Math.floor(e/(2*i))*i;this._body=this._createBody(n,o,C.INITIAL_LENGTH),this._dx=this._dxAtPause=i,this._dy=this._dyAtPause=0,this._isChangingDirection=!1,this._color=C.DEFAULT_COLOR,this._borderColor=C.DEFAULT_BORDER_COLOR,this._isGlowing=!1,this.powerUps={[l]:!1,[h]:!1},this._directionMap=new Map([[`${i},0`,O],[-i+",0",g],["0,"+-i,S],[`0,${i}`,p]])}_createBody(t,e,i){const n=[];for(let o=0;o<i;o++)n.push({x:t-o*this._blockSize,y:e});return n}get color(){return this._color}get borderColor(){return this._borderColor}get isGlowing(){return this._isGlowing}getHeadPosition(){return{...this._body[0]}}getCurrentDirection(){const t=`${this._dx},${this._dy}`;return this._directionMap.get(t)||"unknown"}move(t=!1){this._advanceHead(),t||this._advanceTail()}_advanceHead(){const t={x:Math.round((this.getHeadPosition().x+this._dx)/this._blockSize)*this._blockSize,y:Math.round((this.getHeadPosition().y+this._dy)/this._blockSize)*this._blockSize};this._body.unshift(t),this._isChangingDirection=!1}_advanceTail(){this._body.pop()}teleportHead(t){this._body[0]={...t}}forEachSegment(t){this._body.forEach(((e,i)=>t({...e},i)))}pause(){this._dxAtPause=this._dx,this._dyAtPause=this._dy,this._dx=this._dy=0}unpause(){this._dx=this._dxAtPause,this._dy=this._dyAtPause}didEat(t){let e=this.getHeadPosition();return e.x===t.x&&e.y===t.y}equip(t){t instanceof _&&(this.powerUps[l]=!0),t instanceof u&&(this.powerUps[h]=!0,this.setGlow(!0))}setGlow(t){t!==this.isGlowing&&(this._isGlowing=t,this._borderColor=t?C.PHASE_BORDER_COLOR:C.DEFAULT_BORDER_COLOR)}didCollide(t,e,i){let n=this.getHeadPosition();if(this._body.slice(4).some((t=>t.x===n.x&&t.y===n.y)))return!this.powerUps[h]||(this.powerUps[h]=!1,this.setGlow(!1),console.log("snek phased!"),!1);const o=n.x<0,s=n.x+i>t,a=n.y<0,r=n.y+i>e;return!!(o||s||a||r)&&(!this.powerUps[l]||(this.powerUps[l]=!1,o?this.teleportHead({x:t-i,y:n.y}):s?this.teleportHead({x:0,y:n.y}):a?this.teleportHead({x:n.x,y:e-i}):r&&this.teleportHead({x:n.x,y:0}),console.log("snek teleported!"),!1))}changeDirection(t){if(this._isChangingDirection)return!1;const e=function(t){return v[t.toLowerCase()]||null}(t);if(!e)return!1;const i=this._getCurrentDirection();return o=e,((n=i).dx!==-o.dx||n.dy!==-o.dy)&&(this._setNewDirection(e),!0);var n,o}_getCurrentDirection(){return function(t,e){const i=Math.max(Math.abs(t),Math.abs(e));return 0===i?{dx:0,dy:0}:{dx:t/i,dy:e/i}}(this._dx,this._dy)}_setNewDirection(t){this._isChangingDirection=!0,this._dx=t.dx*this._blockSize,this._dy=t.dy*this._blockSize}}const{INPUT:w}=t,A="Space",f="ArrowLeft",M="ArrowRight",L="ArrowUp",I="ArrowDown";let x="unknown";class D{constructor(t){this._game=t,this._motionAvailable=null,this._lastOrientationUpdate=0,this._touchStart={x:0,y:0},this._touchEnd={x:0,y:0},this._boundMethods=this._bindMethods(),this._initialOrientation=null,this._lastOrientation={beta:0,gamma:0},this._sensitivityMultiplier=1}_bindMethods(){return{handleKeyInput:this._handleKeyInput.bind(this),handleDeviceMovement:this._handleDeviceMovement.bind(this),handleVisibilityChange:this._handleVisibilityChange.bind(this),handlePauseClick:this._handlePauseClick.bind(this),requestDeviceOrientation:this._requestDeviceOrientation.bind(this),enterFullScreen:this._game.board.enterFullScreen.bind(this._game.board),handleTouchStart:this._handleTouchStart.bind(this),handleTouchEnd:this._handleTouchEnd.bind(this),handleRestart:this._handleRestart.bind(this)}}manageGameControls(t){this._manageKeyboardControls(t),this._manageMotionControls(t),this._manageTouchControls(t),this._manageClickControls(t),this._manageVisibilityControl(t)}manageRestartControls(t){const e=t?"addEventListener":"removeEventListener";t&&!this._motionAvailable&&document.removeEventListener("keydown",this._boundMethods.handleKeyInput),document[e]("keydown",this._boundMethods.handleRestart),document[e]("click",this._boundMethods.handleRestart)}_manageKeyboardControls(t){document[t?"addEventListener":"removeEventListener"]("keydown",this._boundMethods.handleKeyInput)}_manageTouchControls(t){const e=t?"addEventListener":"removeEventListener";this._game.board.canvas[e]("touchstart",this._boundMethods.handleTouchStart),this._game.board.canvas[e]("touchend",this._boundMethods.handleTouchEnd)}_manageClickControls(t){const e=t?"addEventListener":"removeEventListener";document[e]("click",this._boundMethods.handlePauseClick),document[e]("dblclick",this._boundMethods.enterFullScreen)}_manageVisibilityControl(t){document[t?"addEventListener":"removeEventListener"]("visibilitychange",this._boundMethods.handleVisibilityChange,!1)}_manageMotionControls(t){"undefined"!=typeof DeviceOrientationEvent&&(t?this._listenToDeviceOrientation():window.removeEventListener("deviceorientation",this._boundMethods.handleDeviceMovement))}_listenToDeviceOrientation(){"function"==typeof DeviceOrientationEvent.requestPermission?"granted"===x?this._activateMotionControl():this._createMotionRequestButton():window.addEventListener("deviceorientation",this._boundMethods.handleDeviceMovement)}_createMotionRequestButton(){let t=this._game.board.createMotionRequestButton();t&&(t.addEventListener("click",this._boundMethods.requestDeviceOrientation),this._game.state.paused||this._game.togglePause(),x="requesting")}_handleKeyInput(t){const e={[f]:()=>this._game.snake.changeDirection(g),[M]:()=>this._game.snake.changeDirection(O),[L]:()=>this._game.snake.changeDirection(S),[I]:()=>this._game.snake.changeDirection(p),[A]:()=>this._game.togglePause()}[t.code];e&&(null!==this._motionAvailable||this._game.state.ended||console.log("key controls activated"),this._deactivateMotionControl(),e())}_handlePauseClick(t){"requesting"!==x&&this._game.togglePause()}_handleRestart(t){(t instanceof KeyboardEvent&&t.code===A||"click"===t.type||"touchend"===t.type)&&this._game.restart()}_handleDeviceMovement(t){const e={beta:t.beta||0,gamma:t.gamma||0};if(!this._initialOrientation)return this._initialOrientation={...e},this._lastOrientation={...e},void this._game.updateMotionControl(e,null,this._sensitivityMultiplier);const{direction:i,sensitivity:n,orientationChange:o}=R(e,this._initialOrientation,this._lastOrientation,this._sensitivityMultiplier);this._sensitivityMultiplier=n,i&&function(t,e){const i=T.MOTION_SENSITIVITY/e;return Math.abs(t.beta)>i||Math.abs(t.gamma)>i}(o,this._sensitivityMultiplier)&&(null===this._motionAvailable&&this._activateMotionControl(),this._game.snake.changeDirection(i),this._lastOrientation=e),this._game.updateMotionControl(e,i,this._sensitivityMultiplier)}_handleVisibilityChange(){document.hidden&&!this._game.state.paused&&this._game.togglePause()}_handleTouchStart(t){t.preventDefault();const e=t.changedTouches[0];this._touchStart={x:e.screenX,y:e.screenY}}_handleTouchEnd(t){t.preventDefault();const e=t.changedTouches[0];this._touchEnd={x:e.screenX,y:e.screenY},this._handleSwipeGesture()}_handleSwipeGesture(){const t=this._touchStart.y-this._touchEnd.y;t>w.SWIPE_SENSITIVITY?this._game.board.enterFullScreen():t<-w.SWIPE_SENSITIVITY?this._game.board.exitFullScreen():this._game.state.ended?this._game.restart():"requesting"!==x&&this._game.togglePause()}_requestDeviceOrientation(){DeviceOrientationEvent.requestPermission().then((t=>{x=t,"granted"===t?(this._activateMotionControl(),this._game.state.paused&&this._game.togglePause()):console.log("motion permission denied")})).catch(console.error).finally((()=>{this._game.board.removeMotionRequestButton()}))}_activateMotionControl(){document.removeEventListener("keydown",this._boundMethods.handleKeyInput),window.addEventListener("deviceorientation",this._boundMethods.handleDeviceMovement),this._game.board.removeMotionRequestButton(),this._game.state.setSpeed(w.GAME_SPEED_MS__MOTION),this._motionAvailable=!0,console.log("motion controls activated")}_deactivateMotionControl(){this._game.board.removeMotionRequestButton(),window.removeEventListener("deviceorientation",this._handleDeviceMovement),this._game.state.setSpeed(w.GAME_SPEED_MS__ARROW),this._motionAvailable=!1}_debugMotionControl(){console.log("motion control debug info",{motionAvailable:this._motionAvailable,motionPermissionState:x,lastOrientation:this._lastOrientation,isChangingDirection:this._game.snake._isChangingDirection,snakeDirection:this._game.snake.getCurrentDirection()})}static _simulateDeviceOrientationRequestPermission(){"undefined"==typeof DeviceOrientationEvent&&(window.DeviceOrientationEvent={}),window.DeviceOrientationEvent.requestPermission=()=>new Promise((t=>{t("granted")})),Object.defineProperty(Object.prototype,"requestPermission",{value:function(){}})}}const{CANVAS:P}=t;function N(t,e){const i=.5;try{t.translate(i,i),e()}finally{t.translate(-.5,-.5)}}var k=Object.freeze({__proto__:null,drawGame:function(t){let e=t.board,i=e.ctx;i.save(),N(i,(()=>{if(i.filter=e.activeFilter,i.fillStyle=e.color,e.isGlowing?(e.canvas.style.border="none",e.canvas.style.outline=`${e.borderColor} dashed thin`,e.canvas.style.boxShadow=`0 0 10px ${e.color}`,e.canvas.style.transition="box-shadow linear 1s"):(e.canvas.style.border=`2px solid ${e.borderColor}`,e.canvas.style.outline="none",e.canvas.style.boxShadow="none",e.canvas.style.transition="box-shadow linear 0.5s"),i.fillRect(0,0,e.canvas.width,e.canvas.height),t.state.paused){let t=e.needsPermission();const n=P.GAME_TEXT_FONT_SIZE*e.ratio,o=5*e.ratio;i.font=`${n}px "bootstrap-icons"`,i.fillStyle=t?P.EXCLAMATION_BTN_COLOR:P.PAUSE_BTN_COLOR,i.fillText(String.fromCharCode(t?62266:62655),o,n+o,e.canvas.width)}})),i.restore()},drawSnake:function(t,e){const i=e.ctx;i.save(),N(i,(()=>{t.isGlowing&&(i.lineCap="round",i.shadowBlur=18,i.shadowColor=t.color),i.fillStyle=t.color,i.strokeStyle=t.borderColor,t.forEachSegment((t=>{i.fillRect(t.x,t.y,e.blockSize,e.blockSize),i.strokeRect(t.x,t.y,e.blockSize,e.blockSize)}))})),i.restore()},drawItem:function(t,e){let i=e.ctx;i.save(),N(i,(()=>{i.fillStyle=t.fillColor,i.strokeStyle=t.borderColor,i.fillRect(t.x,t.y,e.blockSize,e.blockSize),i.strokeRect(t.x,t.y,e.blockSize,e.blockSize)})),i.restore()},drawScore:function(t,e){let i=e.ctx;i.save(),i.font=`${P.GAME_TEXT_FONT_SIZE*e.ratio}px ${P.GAME_TEXT_FONT_FAMILY}`,i.textAlign="center",i.fillStyle=P.GAME_TEXT_COLOR,i.fillText(t.toString(),e.canvas.width/2,e.canvas.height/2-P.GAME_TEXT_FONT_SIZE/2*e.ratio,e.canvas.width),i.restore()},drawHighScore:function(t,e){let i=e.ctx;i.save(),i.font=`${P.GAME_TEXT_FONT_SIZE*e.ratio}px ${P.GAME_TEXT_FONT_FAMILY}`,i.textAlign="center",i.strokeStyle=P.HIGH_SCORE_TEXT_COLOR,i.strokeText(t.toString(),e.canvas.width/2,e.canvas.height/2+P.GAME_TEXT_FONT_SIZE/2*e.ratio,e.canvas.width),i.restore()},drawGameOver:function(t){let e=t.ctx;e.save(),e.font=`${P.GAME_TEXT_FONT_SIZE*t.ratio}px ${P.GAME_TEXT_FONT_FAMILY}`,e.textAlign="center",e.fillStyle=P.GAME_TEXT_COLOR,e.fillText("DED",t.canvas.width/2,t.canvas.height/2,t.canvas.width),e.restore()}});const{renderGame:G,renderGameOver:B}=function(t=k){return{renderGame:function(e){t.drawGame(e),t.drawScore(e.state.score,e.board),t.drawHighScore(e.state.highScore,e.board),t.drawItem(e.item,e.board),t.drawSnake(e.snake,e.board)},renderGameOver:function(e){e.board.setEndGameFilter(),t.drawGame(e),t.drawItem(e.item,e.board),t.drawSnake(e.snake,e.board),t.drawGameOver(e.board)}}}(),{INPUT:F,STATE:H}=t;class U{constructor(){this._paused=!1,this._ended=!1,this._score=0,this._highScore=this._getItemSafely(H.LOCAL_STORAGE_KEY_HIGH_SCORE,0),this._speed=this._getItemSafely(H.LOCAL_STORAGE_KEY_GAME_SPEED,F.GAME_SPEED_MS__ARROW)}get speed(){return this._speed}get score(){return this._score}get highScore(){return this._highScore}get paused(){return this._paused}get ended(){return this._ended}updateScore(t){this._score+=t}updateHighScore(){this.score>this.highScore&&(this._highScore=this.score,this._setItemSafely(H.LOCAL_STORAGE_KEY_HIGH_SCORE,this.score))}setSpeed(t){"number"!=typeof t||isNaN(t)||(this._speed=Math.max(0,Math.round(t)))}togglePause(){this._paused=!this.paused}endGame(){this._ended=!0,this._setItemSafely(H.LOCAL_STORAGE_KEY_GAME_SPEED,this.speed)}_getItemSafely(t,e){try{const i=localStorage.getItem(t);return null!==i?JSON.parse(i):e}catch(t){return console.warn(`Error reading from localStorage: ${t.message}`),e}}_setItemSafely(t,e){try{localStorage.setItem(t,JSON.stringify(e))}catch(t){console.warn(`Error writing to localStorage: ${t.message}`)}}}const{GAME:z}=t,q="gameCanvas",$="controlPanel",V="uiContainer";class Y{constructor(t,e,i){this.board=t,this.snake=e,this.item=i,this.state=new U,this.input=new D(this),this._lastUpdateTimestamp=0,this.orientation={beta:0,gamma:0},this.motionDirection=null,this.motionSensitivity=1,this._initializeUI()}run(t){if(this._shouldUpdateFrame(t)){if(this._updateFrame(),this.state._ended)return void B(this);G(this)}requestAnimationFrame((t=>this.run(t)))}togglePause(){this.state.togglePause(),this.state.paused?(this.snake.pause(),this.board.setPauseGameFilter()):(this.snake.unpause(),this.board.resetFilter()),console.log("game "+(this.state.paused?"paused":"resumed"))}restart(){this.input.manageRestartControls(!1),console.log("game restarted"),K()}updateMotionControl(t,e,i){this.orientation=t,this.motionDirection=e,this.motionSensitivity=i,this.motionIndicator&&this.motionIndicator.update(t,e,i)}_shouldUpdateFrame(t){return t-this._lastUpdateTimestamp>=this.state.speed&&(this._lastUpdateTimestamp=t,!0)}_updateFrame(){this.state.ended||this.state.paused||this._advanceSnake()}_initializeUI(){const t=document.getElementById(V);t?this.motionIndicator=new b(t,{showInfo:!1,position:"corner"}):console.warn(`UI container with id '${V}' not found. Motion control indicator will not be displayed.`)}_advanceSnake(){let t=this.snake.didEat(this.item);this.snake.move(t),t?(console.log(`snek ate item: ${this.item.type.toUpperCase()}`),this.state.updateScore(z.SCORE_INCREMENT),this.snake.equip(this.item),this.board.setGlow(this.snake.powerUps[l]),this._generateNewItem()):this._maybeRegenerateItem(),this._checkCollision()&&this._end()}_generateNewItem(){let t=m(this.state.score,this.snake.powerUps,{alwaysReturnItem:!0,reducePowerUpProbability:!1});null!==t&&(this.item=new t(this.board,this.snake),console.log(`new item generated: ${this.item.type.toUpperCase()}`))}_maybeRegenerateItem(){if(this.state.score>=z.SCORE_THRESHOLD_FOR_VOLATILE_FOOD||this.item instanceof _||this.item instanceof u){let t=m(this.state.score,this.snake.powerUps,{alwaysReturnItem:!1,reducePowerUpProbability:!0});null!==t&&(this.item=new t(this.board,this.snake),console.log(`item regenerated: ${this.item.type.toUpperCase()}`))}}_checkCollision(){return this.board.setGlow(this.snake.powerUps[l]),this.snake.didCollide(this.board.width,this.board.height,this.board.blockSize)}_end(){this.state.endGame(),this.state.updateHighScore(),this.input.manageGameControls(!1),this.input.manageRestartControls(!0),console.log(`game over - final score: ${this.state.score}`)}}function K(){try{let t=function(){let t,e;if(!(t=document.getElementById(q)))throw new Error(`HTML canvas with id '${q}' not found`);if(!(t instanceof HTMLCanvasElement))throw new Error(`#${q} element is not an HTML canvas`);(e=document.getElementById($))||console.warn(`control panel element with id '${$}' not found. proceeding without control panel.`);let i=new n(t,e);return i}(),e=new y(t.height,t.height,t.blockSize),i=new c(t,e),o=new Y(t,e,i);o.input.manageGameControls(!0),requestAnimationFrame((t=>o.run(t)))}catch(t){console.error("failed to initialize game:",t),s("Failed to start the game. Please refresh the page and try again.",document.getElementById(q))}}K();
//# sourceMappingURL=snek.min.js.map
